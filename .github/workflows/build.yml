name: Build ToastBannerSlider Executable

on:
  workflow_dispatch:
    inputs:
      build_amd64:
        description: 'Build for AMD64 architecture'
        required: true
        default: true
        type: boolean
      build_arm64:
        description: 'Build for ARM64 architecture'
        required: true
        default: false
        type: boolean
      build_x86:
        description: 'Build for x86 architecture'
        required: true
        default: false
        type: boolean
  release:
    types: [published]

# 添加必要的权限声明
permissions:
  contents: write

jobs:
  build-amd64:
    if: github.event.inputs.build_amd64 == 'true' || github.event_name == 'release'
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~\AppData\Local\pip\Cache
            .\venv
          key: python-deps-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka pillow
          
      - name: Cache Nuitka build
        uses: actions/cache@v3
        with:
          path: |
            ~\AppData\Local\Nuitka
          key: nuitka-cache-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            nuitka-cache-${{ runner.os }}-
          
      - name: Set version environment variable
        run: |
          if ("${{ github.event_name }}" -eq "release") {
            $VERSION = "${{ github.event.release.tag_name }}".Replace('v', '')
            echo "VERSION=$VERSION" >> $env:GITHUB_ENV
            echo "RELEASE_VERSION=$VERSION" >> $env:GITHUB_ENV
          } else {
            echo "VERSION=1.0.0" >> $env:GITHUB_ENV
            echo "RELEASE_VERSION=1.0.0" >> $env:GITHUB_ENV
          }
          echo "AUTHOR=CreeperAWA" >> $env:GITHUB_ENV
          
      - name: Build executable with Nuitka
        run: |
          python -m nuitka --onefile --windows-console-mode="disable" --enable-plugins="pyside6" --main="main.py" --windows-icon-from-ico="notification_icon.ico" --product-name="ToastBannerSlider" --product-version="${{ env.RELEASE_VERSION }}" --copyright="© 2025 ${{ env.AUTHOR }}. All rights reserved." --output-filename="ToastBannerSlider-amd64.exe" --include-data-file=notification_icon.png=notification_icon.png --include-data-file=notification_icon.ico=notification_icon.ico
      
      - name: Upload artifact (workflow dispatch)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: ToastBannerSlider-amd64-executable
          path: ToastBannerSlider-amd64.exe

      - name: Upload to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: ToastBannerSlider-amd64.exe

  build-arm64:
    if: github.event.inputs.build_arm64 == 'true' || github.event_name == 'release'
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~\AppData\Local\pip\Cache
            .\venv
          key: python-deps-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka pillow
          
      - name: Cache Nuitka build
        uses: actions/cache@v3
        with:
          path: |
            ~\AppData\Local\Nuitka
          key: nuitka-cache-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            nuitka-cache-${{ runner.os }}-
          
      - name: Convert PNG to ICO
        run: |
          python -c "
          import PIL
          from PIL import Image
          import os
          img = Image.open('notification_icon.png')
          img.save('notification_icon.ico', format='ICO')
          "
      
      - name: Set version environment variable
        run: |
          if ("${{ github.event_name }}" -eq "release") {
            $VERSION = "${{ github.event.release.tag_name }}".Replace('v', '')
            echo "VERSION=$VERSION" >> $env:GITHUB_ENV
            echo "RELEASE_VERSION=$VERSION" >> $env:GITHUB_ENV
          } else {
            echo "VERSION=1.0.0" >> $env:GITHUB_ENV
            echo "RELEASE_VERSION=1.0.0" >> $env:GITHUB_ENV
          }
          echo "AUTHOR=CreeperAWA" >> $env:GITHUB_ENV
          
      - name: Build executable with Nuitka
        run: |
          python -m nuitka --onefile --windows-console-mode="disable" --enable-plugins="pyside6" --main="main.py" --windows-icon-from-ico="notification_icon.ico" --product-name="ToastBannerSlider" --product-version="${{ env.RELEASE_VERSION }}" --copyright="© 2025 ${{ env.AUTHOR }}. All rights reserved." --output-filename="ToastBannerSlider-arm64.exe" --include-data-file=notification_icon.png=notification_icon.png --include-data-file=notification_icon.ico=notification_icon.ico
      
      - name: Upload artifact (workflow dispatch)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: ToastBannerSlider-arm64-executable
          path: ToastBannerSlider-arm64.exe

      - name: Upload to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: ToastBannerSlider-arm64.exe

  build-x86:
    if: github.event.inputs.build_x86 == 'true' || github.event_name == 'release'
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~\AppData\Local\pip\Cache
            .\venv
          key: python-deps-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka pillow
          
      - name: Cache Nuitka build
        uses: actions/cache@v3
        with:
          path: |
            ~\AppData\Local\Nuitka
          key: nuitka-cache-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            nuitka-cache-${{ runner.os }}-
          
      - name: Convert PNG to ICO
        run: |
          python -c "
          import PIL
          from PIL import Image
          import os
          img = Image.open('notification_icon.png')
          img.save('notification_icon.ico', format='ICO')
          "
      
      - name: Set version environment variable
        run: |
          if ("${{ github.event_name }}" -eq "release") {
            $VERSION = "${{ github.event.release.tag_name }}".Replace('v', '')
            echo "VERSION=$VERSION" >> $env:GITHUB_ENV
            echo "RELEASE_VERSION=$VERSION" >> $env:GITHUB_ENV
          } else {
            echo "VERSION=1.0.0" >> $env:GITHUB_ENV
            echo "RELEASE_VERSION=1.0.0" >> $env:GITHUB_ENV
          }
          echo "AUTHOR=CreeperAWA" >> $env:GITHUB_ENV
          
      - name: Build executable with Nuitka
        run: |
          python -m nuitka --onefile --windows-console-mode="disable" --enable-plugins="pyside6" --main="main.py" --windows-icon-from-ico="notification_icon.ico" --product-name="ToastBannerSlider" --product-version="${{ env.RELEASE_VERSION }}" --copyright="© 2025 ${{ env.AUTHOR }}. All rights reserved." --output-filename="ToastBannerSlider-x86.exe" --include-data-file=notification_icon.png=notification_icon.png --include-data-file=notification_icon.ico=notification_icon.ico
      
      - name: Upload artifact (workflow dispatch)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: ToastBannerSlider-x86-executable
          path: ToastBannerSlider-x86.exe

      - name: Upload to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: ToastBannerSlider-x86.exe